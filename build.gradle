buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.whalee'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    // 롬복
    implementation('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
    //스프링 부트용 Spring Data Jpa 추상화 라이브러리
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    //인메모리 관계형 데이터베이스
    //메모리에 실행되기 때문에 어플리케이션을 재시작할 때마다 초기화됨.
    implementation('com.h2database:h2')
    //머스태치
    implementation('org.springframework.boot:spring-boot-starter-mustache')
    //구글 oauth를 위한 스프링 시큐리티
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    testImplementation('org.springframework.security:spring-security-test')
    //DB 세션 관리를 위한 의존성
    // 현재 로컬에서 돌리면 H2 기반이기 때문에 똑같이 풀리는데, AWS로 서버 전환하면 RDS를 사용할거니까 문제 없음.
    implementation('org.springframework.session:spring-session-jdbc')
}